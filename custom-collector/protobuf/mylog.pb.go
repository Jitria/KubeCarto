// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: mylog.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MyLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp        string            `protobuf:"bytes,1,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	Id               string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	SrcNamespaceName string            `protobuf:"bytes,3,opt,name=srcNamespaceName,proto3" json:"srcNamespaceName,omitempty"`
	SrcPodName       string            `protobuf:"bytes,4,opt,name=srcPodName,proto3" json:"srcPodName,omitempty"`
	SrcLabel         map[string]string `protobuf:"bytes,5,rep,name=srcLabel,proto3" json:"srcLabel,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SrcIP            string            `protobuf:"bytes,6,opt,name=srcIP,proto3" json:"srcIP,omitempty"`
	SrcPort          string            `protobuf:"bytes,7,opt,name=srcPort,proto3" json:"srcPort,omitempty"`
	DstNamespaceName string            `protobuf:"bytes,8,opt,name=dstNamespaceName,proto3" json:"dstNamespaceName,omitempty"`
	DstPodName       string            `protobuf:"bytes,9,opt,name=dstPodName,proto3" json:"dstPodName,omitempty"`
	DstLabel         map[string]string `protobuf:"bytes,10,rep,name=dstLabel,proto3" json:"dstLabel,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DstIP            string            `protobuf:"bytes,11,opt,name=dstIP,proto3" json:"dstIP,omitempty"`
	DstPort          string            `protobuf:"bytes,12,opt,name=dstPort,proto3" json:"dstPort,omitempty"`
	Protocol         string            `protobuf:"bytes,13,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Method           string            `protobuf:"bytes,14,opt,name=method,proto3" json:"method,omitempty"`
	Path             string            `protobuf:"bytes,15,opt,name=path,proto3" json:"path,omitempty"`
	ResponseCode     int64             `protobuf:"varint,16,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
}

func (x *MyLog) Reset() {
	*x = MyLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mylog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyLog) ProtoMessage() {}

func (x *MyLog) ProtoReflect() protoreflect.Message {
	mi := &file_mylog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyLog.ProtoReflect.Descriptor instead.
func (*MyLog) Descriptor() ([]byte, []int) {
	return file_mylog_proto_rawDescGZIP(), []int{0}
}

func (x *MyLog) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *MyLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MyLog) GetSrcNamespaceName() string {
	if x != nil {
		return x.SrcNamespaceName
	}
	return ""
}

func (x *MyLog) GetSrcPodName() string {
	if x != nil {
		return x.SrcPodName
	}
	return ""
}

func (x *MyLog) GetSrcLabel() map[string]string {
	if x != nil {
		return x.SrcLabel
	}
	return nil
}

func (x *MyLog) GetSrcIP() string {
	if x != nil {
		return x.SrcIP
	}
	return ""
}

func (x *MyLog) GetSrcPort() string {
	if x != nil {
		return x.SrcPort
	}
	return ""
}

func (x *MyLog) GetDstNamespaceName() string {
	if x != nil {
		return x.DstNamespaceName
	}
	return ""
}

func (x *MyLog) GetDstPodName() string {
	if x != nil {
		return x.DstPodName
	}
	return ""
}

func (x *MyLog) GetDstLabel() map[string]string {
	if x != nil {
		return x.DstLabel
	}
	return nil
}

func (x *MyLog) GetDstIP() string {
	if x != nil {
		return x.DstIP
	}
	return ""
}

func (x *MyLog) GetDstPort() string {
	if x != nil {
		return x.DstPort
	}
	return ""
}

func (x *MyLog) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *MyLog) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *MyLog) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MyLog) GetResponseCode() int64 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

type LogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mylog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mylog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_mylog_proto_rawDescGZIP(), []int{1}
}

func (x *LogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_mylog_proto protoreflect.FileDescriptor

var file_mylog_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x79, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x85, 0x05, 0x0a, 0x05, 0x4d, 0x79, 0x4c, 0x6f, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x72, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x72, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x72, 0x63,
	0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x72, 0x63, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x72, 0x63,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x79, 0x4c, 0x6f, 0x67, 0x2e, 0x53, 0x72, 0x63, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x72, 0x63, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x72, 0x63, 0x49, 0x50, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37,
	0x0a, 0x08, 0x64, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x79, 0x4c, 0x6f, 0x67, 0x2e,
	0x44, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x64,
	0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x73, 0x74, 0x49, 0x50,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x73, 0x74, 0x49, 0x50, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x72, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x3b, 0x0a, 0x0d, 0x44, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x27, 0x0a,
	0x0b, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x3b, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x79, 0x4c, 0x6f, 0x67, 0x12,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x79, 0x4c, 0x6f, 0x67, 0x1a, 0x13,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_mylog_proto_rawDescOnce sync.Once
	file_mylog_proto_rawDescData = file_mylog_proto_rawDesc
)

func file_mylog_proto_rawDescGZIP() []byte {
	file_mylog_proto_rawDescOnce.Do(func() {
		file_mylog_proto_rawDescData = protoimpl.X.CompressGZIP(file_mylog_proto_rawDescData)
	})
	return file_mylog_proto_rawDescData
}

var file_mylog_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mylog_proto_goTypes = []interface{}{
	(*MyLog)(nil),       // 0: common.MyLog
	(*LogResponse)(nil), // 1: common.LogResponse
	nil,                 // 2: common.MyLog.SrcLabelEntry
	nil,                 // 3: common.MyLog.DstLabelEntry
}
var file_mylog_proto_depIdxs = []int32{
	2, // 0: common.MyLog.srcLabel:type_name -> common.MyLog.SrcLabelEntry
	3, // 1: common.MyLog.dstLabel:type_name -> common.MyLog.DstLabelEntry
	0, // 2: common.LogStore.SendMyLog:input_type -> common.MyLog
	1, // 3: common.LogStore.SendMyLog:output_type -> common.LogResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_mylog_proto_init() }
func file_mylog_proto_init() {
	if File_mylog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mylog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mylog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mylog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mylog_proto_goTypes,
		DependencyIndexes: file_mylog_proto_depIdxs,
		MessageInfos:      file_mylog_proto_msgTypes,
	}.Build()
	File_mylog_proto = out.File
	file_mylog_proto_rawDesc = nil
	file_mylog_proto_goTypes = nil
	file_mylog_proto_depIdxs = nil
}
