apiVersion: v1
kind: Namespace
metadata:
  name: banana
  labels:
    istio-injection: enabled
---
# 1) banana 서버
apiVersion: apps/v1
kind: Deployment
metadata:
  name: banana-server
  namespace: banana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: banana-server
  template:
    metadata:
      labels:
        app: banana-server
    spec:
      containers:
      - name: server
        image: python:3.9-alpine
        command: ["python", "-m", "http.server", "8080"]
        ports:
        - containerPort: 8080
---
# 2) banana 서버를 노출하는 Service
apiVersion: v1
kind: Service
metadata:
  name: banana-server
  namespace: banana
spec:
  selector:
    app: banana-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
# 3) banana 클라이언트
apiVersion: apps/v1
kind: Deployment
metadata:
  name: banana-client
  namespace: banana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: banana-client
  template:
    metadata:
      labels:
        app: banana-client
    spec:
      containers:
      - name: client
        image: curlimages/curl:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            while true; do
              echo "===== Curl from banana-client ====="
              echo "-> apple-server"
              curl -sS http://apple-server.apple.svc.cluster.local:80 || echo "apple-server error"
              echo "-> banana-server"
              curl -sS http://banana-server.banana.svc.cluster.local:80 || echo "banana-server error"
              echo "-> carrot-server"
              curl -sS http://carrot-server.carrot.svc.cluster.local:80 || echo "carrot-server error"
              echo "===================================="
              sleep 10
            done
